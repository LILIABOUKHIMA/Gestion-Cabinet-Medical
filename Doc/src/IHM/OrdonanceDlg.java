/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package IHM;

import Data.Consultation;
import Data.LigneOrdonannce;
import Data.Patient;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.print.PrinterException;
import java.text.MessageFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.List;
import java.util.Vector;
import javax.swing.Action;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import utils.OrdonnancePDF;

/**
 *
 * @author HP
 */
public class OrdonanceDlg extends javax.swing.JDialog {

    private Consultation consultation = null;
    private Patient  patient = null;
    
    
    private static OrdonanceDlg singleton;
    
    private List<LigneOrdonannce> listLignesOrdonnaces;
    private LigneOrdonannce ligneOrdonance = null;

    public static OrdonanceDlg getSingleton() {
        if (singleton == null){
            singleton = new OrdonanceDlg();
        }
        
        return singleton;
    }
    
    
    
    /**
     * Creates new form ordonnance
     */
    private OrdonanceDlg() {
        super( DossierPatient.getSingleton(), true );
        initComponents();
        
        myInit();
    }
    
    private void myInit(){
        pmTable = new JPopupMenu();
        miSupprimer = new JMenuItem("Supprimer");
        
        pmTable.add(miSupprimer);
        
        miSupprimer.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                miSupprimerActionPerformed();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        tfNomMedicament = new javax.swing.JTextField();
        lNomMedicament = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane2 = new javax.swing.JTextPane();
        lQte = new javax.swing.JLabel();
        tfQte = new javax.swing.JTextField();
        lNbreJours = new javax.swing.JLabel();
        tfNbreJours = new javax.swing.JTextField();
        lPrisesJours = new javax.swing.JLabel();
        tfNbrePrisesJours = new javax.swing.JTextField();
        lObservation = new javax.swing.JLabel();
        tfObservation = new javax.swing.JTextField();
        bValider = new javax.swing.JButton();
        bAjouter1 = new javax.swing.JButton();
        bImprimerOrdonnance = new javax.swing.JButton();
        bAnnuler = new javax.swing.JButton();

        setLocationByPlatform(true);
        setName(""); // NOI18N
        setResizable(false);

        bg.setBackground(new java.awt.Color(255, 255, 255));
        bg.setEnabled(false);
        bg.setName("frame1"); // NOI18N
        bg.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        bg.add(tfNomMedicament, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 190, 30));

        lNomMedicament.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        lNomMedicament.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lNomMedicament.setText("Médicament");
        bg.add(lNomMedicament, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 30));

        table.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nom Médicament", "Quantite", "Jours", "Prises par Jours", "Observation"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        bg.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 960, 390));

        jScrollPane2.setFont(new java.awt.Font("Segoe UI", 0, 1)); // NOI18N

        jTextPane2.setContentType("text/html"); // NOI18N
        jScrollPane2.setViewportView(jTextPane2);

        bg.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 30, 20, 0));

        lQte.setDisplayedMnemonic('l');
        lQte.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        lQte.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lQte.setText("Quntite");
        bg.add(lQte, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 0, 190, 30));

        tfQte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfQteActionPerformed(evt);
            }
        });
        bg.add(tfQte, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 30, 190, 30));

        lNbreJours.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        lNbreJours.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lNbreJours.setText("Jours");
        bg.add(lNbreJours, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 0, 180, 30));
        bg.add(tfNbreJours, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 30, 190, 30));

        lPrisesJours.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        lPrisesJours.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lPrisesJours.setText("Prises / Jour");
        bg.add(lPrisesJours, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 0, 180, 30));
        bg.add(tfNbrePrisesJours, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 30, 190, 30));

        lObservation.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        lObservation.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lObservation.setText("Observation");
        bg.add(lObservation, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 0, 180, 30));
        bg.add(tfObservation, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 30, 190, 30));

        bValider.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/if_check_1930264_1.png"))); // NOI18N
        bValider.setToolTipText("Valider Les modification");
        bValider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bValiderActionPerformed(evt);
            }
        });
        bg.add(bValider, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 50, -1, -1));

        bAjouter1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/if_sign-add_299068(1).png"))); // NOI18N
        bAjouter1.setToolTipText("Ajouter une ligne d'Ordonnance");
        bAjouter1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAjouter1ActionPerformed(evt);
            }
        });
        bg.add(bAjouter1, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 10, -1, 40));

        bImprimerOrdonnance.setText("Imprimer l'Odonnance");
        bImprimerOrdonnance.setToolTipText("Imprimer l'Ordonnance");
        bImprimerOrdonnance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bImprimerOrdonnanceActionPerformed(evt);
            }
        });
        bg.add(bImprimerOrdonnance, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 460, 200, 30));

        bAnnuler.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/if_cancel_32387.png"))); // NOI18N
        bAnnuler.setToolTipText("Annuler les modifications");
        bAnnuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAnnulerActionPerformed(evt);
            }
        });
        bg.add(bAnnuler, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 90, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(103, 103, 103))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bValiderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bValiderActionPerformed
        String medicament = tfNomMedicament.getText().trim();
        
        if (medicament.equals("")){
            JOptionPane.showMessageDialog(this, "Erreur dans le médicament ...", "Médicament !!!", JOptionPane.ERROR);
            
            tfNomMedicament.selectAll();
            tfNomMedicament.requestFocus();
        }
        
        int qte = 0;
        try {
            qte = Integer.parseInt( tfQte.getText().trim());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erreur dans la quantité ...", "Quantité !!!", JOptionPane.ERROR);
            
            tfQte.selectAll();
            tfQte.requestFocus();
        }
        
        
        int nbJours = 0;
        try {
            nbJours = Integer.parseInt( tfNbreJours.getText().trim());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erreur dans le nombre de jours ...", "Quantité !!!", JOptionPane.ERROR);
            
            tfNbreJours.selectAll();
            tfNbreJours.requestFocus();
        }
        
        int nbPrisesJours = 0;
        try {
            nbPrisesJours = Integer.parseInt( tfNbreJours.getText().trim());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erreur dans le Nombre de prises par jours ...", "Nombre de Prises !!!", JOptionPane.ERROR);
            
            tfNbrePrisesJours.selectAll();
            tfNbrePrisesJours.requestFocus();
        }
        
        String observation = tfObservation.getText().trim();
        
        ligneOrdonance.setMedicament(medicament);
        ligneOrdonance.setQte(qte);
        ligneOrdonance.setNbJours(nbJours);
        ligneOrdonance.setNbPriseJour(nbPrisesJours);
        ligneOrdonance.setObservation(observation);
        
        try {
            if (ligneOrdonance.getId() == 0){
                ligneOrdonance.Ajouter();
                
                listLignesOrdonnaces.add(ligneOrdonance);
                ((DefaultTableModel)table.getModel()).addRow( getRow(ligneOrdonance) );
            }
            else{
                ligneOrdonance.Modifier();
                
                int indexRow = listLignesOrdonnaces.indexOf(ligneOrdonance);
                
                ((DefaultTableModel)table.getModel()).setValueAt(ligneOrdonance.getMedicament(), indexRow, 0);
                ((DefaultTableModel)table.getModel()).setValueAt(ligneOrdonance.getQte(), indexRow, 1);
                ((DefaultTableModel)table.getModel()).setValueAt(ligneOrdonance.getNbJours(), indexRow, 2);
                ((DefaultTableModel)table.getModel()).setValueAt(ligneOrdonance.getNbPriseJour(), indexRow, 3);
                ((DefaultTableModel)table.getModel()).setValueAt(ligneOrdonance.getObservation(), indexRow, 4);
                
                listLignesOrdonnaces.set( indexRow , ligneOrdonance);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        emptyFormulaire();
        disabledAll();
    }//GEN-LAST:event_bValiderActionPerformed

    private void bAjouter1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAjouter1ActionPerformed
        ligneOrdonance = new LigneOrdonannce();
        ligneOrdonance.setIdConsultation(consultation.getId());
        
        ligneOrdonance.setId(0);
        ligneOrdonance.setQte(1);
        ligneOrdonance.setNbJours(5);
        ligneOrdonance.setNbPriseJour(3);
        ligneOrdonance.setObservation("Après Repat ..");
        
        fillFormulaire(ligneOrdonance);
    }//GEN-LAST:event_bAjouter1ActionPerformed

    private void bImprimerOrdonnanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bImprimerOrdonnanceActionPerformed
        utils.OrdonnancePDF pdf = OrdonnancePDF.getSingleton();
        
        pdf.setDoctor( Home.getSingletonWithoutCreation().getUser() );
        pdf.setConsultation(consultation);
        pdf.setLignesOrdonnances(listLignesOrdonnaces);
        pdf.setPatient(patient);
        
        pdf.generatePDF();
    }//GEN-LAST:event_bImprimerOrdonnanceActionPerformed

    private void bAnnulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAnnulerActionPerformed
        ligneOrdonance = null;
        emptyFormulaire();
        disabledAll();
    }//GEN-LAST:event_bAnnulerActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        if (evt.getClickCount()>=2 && evt.getButton() == MouseEvent.BUTTON1){
            int indexRow = table.getSelectedRow();
        
            if (indexRow == -1){
                JOptionPane.showMessageDialog(this, "Veuillez sélectionner une ligne d'ordonnance !!!", "Ordonnance ???", JOptionPane.ERROR_MESSAGE);
                return;
            }
        
            ligneOrdonance = listLignesOrdonnaces.get(indexRow);
            fillFormulaire( ligneOrdonance );
        }
        else if (evt.getButton() == MouseEvent.BUTTON3){
            pmTable.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_tableMouseClicked

    private void tfQteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfQteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfQteActionPerformed

    private void miSupprimerActionPerformed(){
        int indice = table.getSelectedRow();
        if (indice == -1){
            return;
        }
        
        int reponse = JOptionPane.showConfirmDialog(this, "Voullez-vous supprimer cette ligne d'ordonnace ?", "Supprimer ?", JOptionPane.YES_NO_OPTION);
        if (reponse == JOptionPane.YES_OPTION){
            LigneOrdonannce lo = listLignesOrdonnaces.get(indice);
            
            try {
                lo.Supprimer();
                listLignesOrdonnaces.remove(indice);
                ((DefaultTableModel)table.getModel()).removeRow( indice );
            } catch (Exception e) {
                e.printStackTrace();
            }        
        }
    }   
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrdonanceDlg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrdonanceDlg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrdonanceDlg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrdonanceDlg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OrdonanceDlg().setVisible(true);
            }
        });
    }
    
    private void enabledAll(){
        setAllEnabled(true);
    }
    
    private void disabledAll(){
        setAllEnabled(false);
    }
    
    private void setAllEnabled(boolean enabled){
        this.lNomMedicament.setEnabled(enabled);
        this.tfNomMedicament.setEnabled(enabled);
        
        this.lQte.setEnabled(enabled);
        this.tfQte.setEnabled(enabled);
        
        this.lNbreJours.setEnabled(enabled);
        this.tfNbreJours.setEnabled(enabled);
        
        this.lPrisesJours.setEnabled(enabled);
        this.tfNbrePrisesJours.setEnabled(enabled);
        
        this.lObservation.setEnabled(enabled);
        this.tfObservation.setEnabled(enabled);
    }
    
    private void emptyFormulaire(){
        this.tfNomMedicament.setText("");
        this.tfQte.setText("");
        this.tfNbreJours.setText("");
        this.tfNbrePrisesJours.setText("");
        this.tfObservation.setText("");
        
        this.tfNomMedicament.requestFocus();
    }

    private void fillFormulaire(LigneOrdonannce ligneOrdonnace){
        if (ligneOrdonnace == null){
            emptyFormulaire();
            disabledAll();
            return;
        }
        
        this.tfNomMedicament.setText(ligneOrdonnace.getMedicament());
        this.tfQte.setText(ligneOrdonnace.getQte()+"");
        this.tfNbreJours.setText(ligneOrdonnace.getNbJours()+"");
        this.tfNbrePrisesJours.setText(ligneOrdonnace.getNbPriseJour()+"");
        this.tfObservation.setText(ligneOrdonnace.getObservation());
        
        enabledAll();
    }
    
    public void setConsultation(Consultation consultation) {
        this.consultation = consultation;
        this.patient = Patient.getById( consultation.getIdPatient() );
        
        this.setTitle("Ordonance de la consultation : "+consultation.getNumConsultation());
        
        DefaultTableModel model = (DefaultTableModel)table.getModel();
        model.setRowCount(0);
        
        listLignesOrdonnaces = LigneOrdonannce.rechercher( " idConsultation = '"+consultation.getId()+"' " );
        
        for (LigneOrdonannce ligneOrdonance : listLignesOrdonnaces){
            model.addRow( getRow(ligneOrdonance) );
        }
        
        emptyFormulaire();
        disabledAll();
    }
    
    public Vector getRow(LigneOrdonannce ligneOrdonance){
        Vector row = new Vector();
            
        row.add( ligneOrdonance.getMedicament() );
        row.add( ligneOrdonance.getQte() );
        row.add( ligneOrdonance.getNbJours() );
        row.add( ligneOrdonance.getNbPriseJour() );
        row.add( ligneOrdonance.getObservation() );
            
        return row;
    }

    public static void showOrdonanceDlg(Consultation consultation){
        getSingleton();
        singleton.setConsultation(consultation);
       
        
        singleton.setVisible(true);
    }
    
    private JPopupMenu  pmTable;
    private JMenuItem   miSupprimer;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAjouter1;
    private javax.swing.JButton bAnnuler;
    private javax.swing.JButton bImprimerOrdonnance;
    private javax.swing.JButton bValider;
    private javax.swing.JPanel bg;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextPane jTextPane2;
    private javax.swing.JLabel lNbreJours;
    private javax.swing.JLabel lNomMedicament;
    private javax.swing.JLabel lObservation;
    private javax.swing.JLabel lPrisesJours;
    private javax.swing.JLabel lQte;
    private javax.swing.JTable table;
    private javax.swing.JTextField tfNbreJours;
    private javax.swing.JTextField tfNbrePrisesJours;
    private javax.swing.JTextField tfNomMedicament;
    private javax.swing.JTextField tfObservation;
    private javax.swing.JTextField tfQte;
    // End of variables declaration//GEN-END:variables
}
